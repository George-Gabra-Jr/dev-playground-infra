name: pipelines

services:
  registry:
    container_name: registry
    image: registry:2
    restart: unless-stopped
    ports:
      - 127.0.0.1:5000:5000
    volumes:
      - registry_data:/data
    networks:
      cicd:
        aliases:
          - registry

  docker-dind:
    container_name: docker-dind
    image: docker:dind
    privileged: true
    restart: unless-stopped
    ports:
      - 127.0.0.1:2376:2376
    volumes:
      - dind-certs:/certs/client
      - dind-data:/var/dind_home
    environment:
      DOCKER_TLS_CERTDIR: /certs
    command: ["--storage-driver", "overlay2"]
    networks:
      cicd:
        aliases:
          - docker

  jenkins:
    container_name: jenkins
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    user: root
    privileged: true
    restart: unless-stopped
    volumes:
      - /jenkins:/var/jenkins_home
      - dind-data:/var/dind_home
      - dind-certs:/certs/client:ro
    environment:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: 1
    networks:
      cicd:
        aliases:
          - jenkins
      traefik-net:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`jenkins.dev-playground.net`)"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik-net"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      traefik-net:
      cicd:
        aliases:
          - portainer
      observability:
        aliases:
          - portainer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.dev-playground.net`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=traefik-net"


  sonarqube:
    container_name: sonarqube
    image: sonarqube:community
    restart: unless-stopped
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_bundled_plugins:/opt/sonarqube/lib/bundled-plugins
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    networks:
      traefik-net:
      cicd:
        aliases:
          - sonarqube
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`sonarqube.dev-playground.net`)"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
      - "traefik.docker.network=traefik-net"
    depends_on:
      - sonarqube-db

  sonarqube-db:
    container_name: sonarqube-db
    image: postgres:15
    restart: unless-stopped
    volumes:
      - sonarqube_db:/var/lib/postgresql
      - sonar_postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      cicd:
        aliases:
          - sonarqube-db

networks:
  cicd:
    external: true
  traefik-net:
    external: true

volumes:
  registry_data:
  dind-certs:
  dind-data:
  jenkins:
  portainer_data:
  sonarqube_bundled_plugins:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_db:
  sonarqube_extensions:
  sonarqube_logs:
  sonar_postgresql_data: